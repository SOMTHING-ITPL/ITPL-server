// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.0
// source: update.proto

package update_client

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Concert struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Genre         int32                  `protobuf:"varint,2,opt,name=genre,proto3" json:"genre,omitempty"` // bigint 매핑
	Cast          []string               `protobuf:"bytes,3,rep,name=cast,proto3" json:"cast,omitempty"`
	Keyword       []string               `protobuf:"bytes,4,rep,name=keyword,proto3" json:"keyword,omitempty"`                      // 20개
	Title         string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`                          // 공연 이름
	UpdatedAt     string                 `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"` // ISO datetime
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Concert) Reset() {
	*x = Concert{}
	mi := &file_update_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Concert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Concert) ProtoMessage() {}

func (x *Concert) ProtoReflect() protoreflect.Message {
	mi := &file_update_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Concert.ProtoReflect.Descriptor instead.
func (*Concert) Descriptor() ([]byte, []int) {
	return file_update_proto_rawDescGZIP(), []int{0}
}

func (x *Concert) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Concert) GetGenre() int32 {
	if x != nil {
		return x.Genre
	}
	return 0
}

func (x *Concert) GetCast() []string {
	if x != nil {
		return x.Cast
	}
	return nil
}

func (x *Concert) GetKeyword() []string {
	if x != nil {
		return x.Keyword
	}
	return nil
}

func (x *Concert) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Concert) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type UpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Concerts      []*Concert             `protobuf:"bytes,1,rep,name=concerts,proto3" json:"concerts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	mi := &file_update_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_update_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_update_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateRequest) GetConcerts() []*Concert {
	if x != nil {
		return x.Concerts
	}
	return nil
}

type UpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateResponse) Reset() {
	*x = UpdateResponse{}
	mi := &file_update_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateResponse) ProtoMessage() {}

func (x *UpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_update_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateResponse.ProtoReflect.Descriptor instead.
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return file_update_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_update_proto protoreflect.FileDescriptor

const file_update_proto_rawDesc = "" +
	"\n" +
	"\fupdate.proto\"\x92\x01\n" +
	"\aConcert\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05genre\x18\x02 \x01(\x05R\x05genre\x12\x12\n" +
	"\x04cast\x18\x03 \x03(\tR\x04cast\x12\x18\n" +
	"\akeyword\x18\x04 \x03(\tR\akeyword\x12\x14\n" +
	"\x05title\x18\x05 \x01(\tR\x05title\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\tR\tupdatedAt\"5\n" +
	"\rUpdateRequest\x12$\n" +
	"\bconcerts\x18\x01 \x03(\v2\b.ConcertR\bconcerts\"D\n" +
	"\x0eUpdateResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2C\n" +
	"\x0eConcertUpdater\x121\n" +
	"\x0eUpdateConcerts\x12\x0e.UpdateRequest\x1a\x0f.UpdateResponseB'Z%ITPL-server/grpc_client/update_clientb\x06proto3"

var (
	file_update_proto_rawDescOnce sync.Once
	file_update_proto_rawDescData []byte
)

func file_update_proto_rawDescGZIP() []byte {
	file_update_proto_rawDescOnce.Do(func() {
		file_update_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_update_proto_rawDesc), len(file_update_proto_rawDesc)))
	})
	return file_update_proto_rawDescData
}

var file_update_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_update_proto_goTypes = []any{
	(*Concert)(nil),        // 0: Concert
	(*UpdateRequest)(nil),  // 1: UpdateRequest
	(*UpdateResponse)(nil), // 2: UpdateResponse
}
var file_update_proto_depIdxs = []int32{
	0, // 0: UpdateRequest.concerts:type_name -> Concert
	1, // 1: ConcertUpdater.UpdateConcerts:input_type -> UpdateRequest
	2, // 2: ConcertUpdater.UpdateConcerts:output_type -> UpdateResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_update_proto_init() }
func file_update_proto_init() {
	if File_update_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_update_proto_rawDesc), len(file_update_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_update_proto_goTypes,
		DependencyIndexes: file_update_proto_depIdxs,
		MessageInfos:      file_update_proto_msgTypes,
	}.Build()
	File_update_proto = out.File
	file_update_proto_goTypes = nil
	file_update_proto_depIdxs = nil
}
